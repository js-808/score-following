# Imports
import numpy as np
#import audio_preprocessor.preprocessor as pp
#import follower.follower as flwr
from sklearn.mixture import GaussianMixture as GMM
from filterpy import kalman

########

class ScoreFilter():
    ''' Class for performing our mixed filter to predict chord-switching times in real time
        Attributes:

        Methods:

    '''
    def __init__(self,wav_data,chord_events):
        ''' Initializes model with data from the sound file and from the MIDI file
            Parameters:
                wav_data (tuple): Consists of tempo(float64), beat frames(ndarray),
                        and beat times(ndarray) as generated by the preprocessor.
                chord_events (tuple): chord_events (List[Tuple]): A list with entries
                        [([List of chord note_values], onset_time, offset_time)]
                        (intervals should be non-intersecting, and should span
                        the entire time interval (with any silence being represented
                        by an empty list on that time interval)). Generated by preprocessor.
        '''
        self.states


    def _forwardpass(self):
        '''
        '''

    def _():
        '''
        '''

if __name__ == "__main__":
    # Tests and shit #
    print("Hello World")
